# 实例名称
org.quartz.scheduler.instanceName= MainScheduler  

# 实例Id,集群时请设置不同的Id  
# org.quartz.scheduler.instanceId= instance_one 

# 使用quartz线程池
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool 
org.quartz.threadPool.threadCount = 10
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

# 使用内存持久化
# org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

# 使用数据库持久化
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX    

# 表前缀,所需要的表在quartz下载的包中可以找到
org.quartz.jobStore.tablePrefix = QRTZ_ 
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate

# 数据源
org.quartz.jobStore.dataSource = qzDS 

# 参数类型只能为String
org.quartz.jobStore.useProperties=true 

# 集群配置
org.quartz.jobStore.isClustered=true 
org.quartz.scheduler.instanceId= AUTO
org.quartz.jobStore.selectWithLockSQL=SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME = ?

org.quartz.dataSource.qzDS.driver = com.microsoft.sqlserver.jdbc.SQLServerDriver
org.quartz.dataSource.qzDS.URL = jdbc:sqlserver://127.0.0.17:1433;databasename=QuartzDB;
org.quartz.dataSource.qzDS.user = sa
org.quartz.dataSource.qzDS.password = 1q2w#E$R
org.quartz.dataSource.qzDS.maxConnections = 30
